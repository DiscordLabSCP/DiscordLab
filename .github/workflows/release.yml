name: Notify on release

on:
  release:
    types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get files from release and convert into role pings
        shell: pwsh
        run: |
          $releaseId = ${{ github.event.release.id }}
          $releaseUrl = "https://api.github.com/repos/${{ github.repository }}/releases/$releaseId/assets"

          $assets = Invoke-RestMethod -Uri $releaseUrl
          $releasePath = "${{ github.workspace }}/release"

          if (-Not (Test-Path -Path $releasePath)) {
            New-Item -ItemType Directory -Path $releasePath
          }

          foreach ($asset in $assets) {
            $assetUrl = $asset.browser_download_url
            $assetName = $asset.name
            Invoke-WebRequest -Uri $assetUrl -OutFile "$releasePath/$assetName"
          }

          $roleMap = @{
            "DiscordLab.Bot" = "1326565513392033844"
            "DiscordLab.AdvancedLogging" = "1326565584334225469"
            "DiscordLab.BotStatus" = "1326565625249660990"
            "DiscordLab.ConnectionLogs" = "1326565678601212016"
            "DiscordLab.DeathLogs" = "1326565793856622628"
            "DiscordLab.Moderation" = "1326565888962596966"
            "DiscordLab.ModerationLogs" = "1326565923242639492"
            "DiscordLab.SCPSwap" = "1326565946915295365"
            "DiscordLab.StatusChannel" = "1326565978125107211"
            "DiscordLab.XPSystem" = "1326566015861260298"
          }

          $releaseFiles = Get-ChildItem -Path $releasePath
          $rolePings = @()

          foreach ($file in $releaseFiles) {
            $fileName = [System.IO.Path]::GetFileNameWithoutExtension($file.Name)
            if ($roleMap.ContainsKey($fileName)) {
              $rolePings += "<@&$($roleMap[$fileName])>"
            }
          }

          $rolePingString = $rolePings -join " "
          echo "::set-output name=role_pings::$rolePingString" 
      - name: Notify
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          data: '{"content": "New release available! ${{ steps.get_role_pings.outputs.role_pings }}\n${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref }}"}'